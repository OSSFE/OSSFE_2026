# This file was created automatically with `myst init --gh-pages` ðŸª„ ðŸ’š
# Ensure your GitHub Pages settings for this repository are set to deploy with **GitHub Actions**.

name: MyST GitHub Pages Deploy
on:
  push:
    # Runs on pushes targeting the default branch
    branches: [main]
env:
  # `BASE_URL` determines the website is served from, including CSS & JS assets
  BASE_URL: /${{ github.event.repository.name }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install MyST Markdown
        run: |
          npm install -g mystmd
          myst --version
      - name: Debug Directory Structure
        run: |
          ls -la
          cat myst.yml
      - name: Enhanced Debug
        run: |
          echo "=== MyST Version ==="
          myst --version
          
          echo "=== Current Working Directory ==="
          pwd
          
          echo "=== All HTML Files ==="
          find . -type f -name "*.html" | sort
          
          echo "=== All Build Directories ==="
          find . -type d -name "*build*" | sort
          
          echo "=== Configuration Dump ==="
          myst config dump
          
          echo "=== Trying Alternative Build Command ==="
          mkdir -p _build/html
          myst build --html --output-dir=_build/html --site-base-url=${{ env.BASE_URL }}
          ls -la _build/html
      - name: Build HTML Assets
        run: |
          # Run with debug output to see what's happening
          myst build --html -v --site-base-url=${{ env.BASE_URL }}
          # Check if the build directory exists
          ls -la
          # Check if the expected output directory exists
          if [ -d "_build" ]; then
            echo "_build directory exists"
            ls -la _build
            if [ -d "_build/html" ]; then
              echo "_build/html directory exists"
              ls -la _build/html
            else
              echo "_build/html directory does NOT exist"
              # Try to find where the output went
              find . -type d -name "html" | xargs ls -la
            fi
          else
            echo "_build directory does NOT exist"
            # Look for other build directories
            find . -type d -name "*build*" | xargs ls -la
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_build/html'
        # Continue even if this step fails
        continue-on-error: true
      - name: Fallback Upload Path
        if: failure()
        uses: actions/upload-pages-artifact@v3
        with:
          # Try an alternative path if the default fails
          path: './build/html'
        continue-on-error: true
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # Only run if there's a valid artifact
        if: success()